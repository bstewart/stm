# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the sumcpp branch
on:
  push:
    branches: [ sumcpp ]
  pull_request:
    branches: [ sumcpp ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    Ubuntu:
        name: Generate results on the latest Ubuntu release
        runs-on: ubuntu-latest

        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - name: Install dependencies
              run: |
                sudo apt-get install libcurl4-openssl-dev
            - uses: actions/checkout@v2
            - uses: r-lib/actions/setup-r@master
            - name: Install R packages
              run: |
                install.packages(c("remotes", "rcmdcheck", "devtools"))
                remotes::install_deps(dependencies = TRUE)
              shell: Rscript {0}    
            - name: Build and install stm
              run: |
                library(devtools)
                build(vignettes = FALSE)
                install()
              shell: Rscript {0}    
            - name: Run stm example and save output
              run: |
                library(stm)
                docs = poliblog5k.docs
                voc = poliblog5k.voc
                heldout <- make.heldout(docs, voc)
                ubuntu <- stm(heldout$documents, heldout$vocab, K=5, init.type = "Spectral", max.em.its = 100, control=list(method="BFGS", neum_sum_cpp=TRUE))
                save(ubuntu,file="ubuntu.Rda")
              shell: Rscript {0}    
            - name: Run stm and upload result for Ubuntu
              uses: actions/upload-artifact@v1
              with:
                name: result
                path: result/ubuntu.Rda
            # Runs a single command using the runners shell
            - name: Run a one-line script
              run: echo Hello, world from Ubuntu!
    
            # Runs a set of commands using the runners shell
            - name: Run a multi-line script
              run: |
                echo Add other actions to build,
                echo test, and deploy your project

    MacOS:
        name: Generate results on MacOS and compare them to Ubuntu
        needs: Ubuntu
        runs-on: macOS-latest

        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it

            - uses: actions/checkout@v2
            - uses: r-lib/actions/setup-r@master
            - name: Install dependencies
              run: |
                install.packages(c("remotes", "rcmdcheck"))
                remotes::install_deps(dependencies = TRUE)
              shell: Rscript {0}    
            - uses: actions/checkout@v2
 
            # Runs a single command using the runners shell
            - name: Run a one-line script
              run: echo Hello, world from MacOS!

            # Runs a set of commands using the runners shell
            - name: Run a multi-line script
              run: |
                echo Add other actions to build,
                echo test, and deploy your project


    Windows:
        name: Generate results on Windows and compare them to MacOS
        needs: MacOS
        runs-on: windows-latest

        steps:
            # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
            - uses: actions/checkout@v2
            - uses: r-lib/actions/setup-r@master
            - name: Install dependencies
              run: |
                install.packages(c("remotes", "rcmdcheck"))
                remotes::install_deps(dependencies = TRUE)
              shell: Rscript {0}    
            - uses: actions/checkout@v2

            # Runs a single command using the runners shell
            - name: Run a one-line script
              run: echo Hello, world from Windows!

            # Runs a set of commands using the runners shell
            - name: Run a multi-line script
              run: |
                echo Add other actions to build,
                echo test, and deploy your project


